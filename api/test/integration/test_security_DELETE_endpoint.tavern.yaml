---
test_name: DELETE /security/roles/{role_id}

includes:
  - !include common.yaml

#marks:
#  - usefixtures:
#      - security_tests

stages:

  # Authentication stage
  - type: ref
    id: login_get_token

  # DELETE /security/roles/{role_id}
  - name: Try to delete a existent role
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        role_ids: 2
    response:
      status_code: 200
      body:
        data:
          affected_items:
            - '2'
          total_affected_items: 1

  # DELETE /security/roles/1
  - name: Try to delete the admin role of the system
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        role_ids: 1
    response:
      status_code: 200
      body: &error
        data:
          affected_items: []
          failed_items:
            - error:
                code: !anyint
                message: !anystr
                remediation: !anything
              id: !anything
          total_affected_items: 0
          total_failed_items: !anyint

  # DELETE /security/roles/{non-existent role}
  - name: Try to delete a non-existent role
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        role_ids: 999
    response:
      status_code: 200
      body:
        <<: *error
---
test_name: DELETE /security/policies/{policy_id}

includes:
  - !include common.yaml

stages:

  # Authentication stage
  - type: ref
    id: login_get_token

  # DELETE /security/policies/{role_id}
  - name: Try to delete a existent policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 2
    response:
      status_code: 200
      body:
        data:
          affected_items:
            - '2'
          total_affected_items: 1

  # DELETE /security/policies/1
  - name: Try to delete the admin policy of the system
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 1
    response:
      status_code: 200
      body:
        <<: *error

  # DELETE /security/roles/{non-existent role}
  - name: Try to delete an inexistent policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 999
    response:
      status_code: 200
      body:
        <<: *error
---
test_name: DELETE /security/roles/{role_id}/policies/{policy_id}

stages:

  # DELETE /security/roles/{role_id}/policies/{policy_id}
  - name: Try to delete a existent role-policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/3/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 3
    response:
      status_code: 200
      body:
        data:
          affected_items:
            - 'role 3: policy 3'
          total_affected_items: 1

  # DELETE /security/roles/{non-existent role_id}/policies/{non-existent policy_id}
  - name: Try to delete a non-existent role-policy
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/999/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 999
    response:
      status_code: 200
      body:
        <<: *error

  # DELETE /security/roles/{non-existent role_id}/policies/{policy_id}
  - name: Try to delete a non-existent role-policy (role non-existent)
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/999/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 3
    response:
      status_code: 200
      body:
        <<: *error

  # DELETE /security/roles/{role_id}/policies/{policy_id}
  - name: Try to delete a non-existent role-policy (policy non-existent)
    request:
      url: "{protocol:s}://{host:s}:{port:d}/security/roles/3/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 999
    response:
      status_code: 200
      body:
        <<: *error
---
test_name: DELETE /security/roles

stages:

  # DELETE /security/roles
  - name: Try to delete two existent roles
    request: &delete_all_roles_request
      url: "{protocol:s}://{host:s}:{port:d}/security/roles"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        role_ids: 3,4
    response:
      status_code: 200
      body:
        data:
          affected_items:
            - '3'
            - '4'
          total_affected_items: 2

  # DELETE /security/roles
  - name: Try to delete all roles of the system
    request:
      <<: *delete_all_roles_request
    response:
      status_code: 200
      body:
        data:
          affected_items: []
          total_affected_items: 0

  # DELETE /security/roles
  - name: Try to delete the administrator role
    request:
      <<: *delete_all_roles_request
      params:
        role_ids: 1
    response:
      status_code: 200
      body:
        <<: *error
---
test_name: DELETE /security/policies

stages:

  # DELETE /security/policies
  - name: Try to delete two existent policies
    request: &delete_all_policies_request
      url: "{protocol:s}://{host:s}:{port:d}/security/policies"
      headers:
        Authorization: "Bearer {test_login_token}"
      method: DELETE
      params:
        policy_ids: 3,4
    response:
      status_code: 200
      body:
        data:
          affected_items:
            - '3'
            - '4'
          total_affected_items: 2

  # DELETE /security/policies
  - name: Try to delete all policies of the system
    request:
      <<: *delete_all_policies_request
    response:
      status_code: 200
      body:
        data:
          affected_items: []
          total_affected_items: 0

  - name: Try to delete the administrator policy
    request:
      <<: *delete_all_policies_request
      params:
        policy_ids: 1
    response:
      status_code: 200
      body:
        <<: *error
