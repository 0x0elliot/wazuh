# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from api.models.base_model_ import Model
from api import util


class AgentDeleted(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, msg: str=None, older_than: str=None, affected_agents: List[str]=None, failed_ids: List[str]=None, total_affected_agents: int=None):  # noqa: E501
        """AgentDeleted - a model defined in Swagger

        :param msg: The msg of this AgentDeleted.  # noqa: E501
        :type msg: str
        :param older_than: The older_than of this AgentDeleted.  # noqa: E501
        :type older_than: str
        :param affected_agents: The affected_agents of this AgentDeleted.  # noqa: E501
        :type affected_agents: List[str]
        :param failed_ids: The failed_ids of this AgentDeleted.  # noqa: E501
        :type failed_ids: List[str]
        :param total_affected_agents: The total_affected_agents of this AgentDeleted.  # noqa: E501
        :type total_affected_agents: int
        """
        self.swagger_types = {
            'msg': str,
            'older_than': str,
            'affected_agents': List[str],
            'failed_ids': List[str],
            'total_affected_agents': int
        }

        self.attribute_map = {
            'msg': 'msg',
            'older_than': 'older_than',
            'affected_agents': 'affected_agents',
            'failed_ids': 'failed_ids',
            'total_affected_agents': 'total_affected_agents'
        }

        self._msg = msg
        self._older_than = older_than
        self._affected_agents = affected_agents
        self._failed_ids = failed_ids
        self._total_affected_agents = total_affected_agents

    @classmethod
    def from_dict(cls, dikt) -> 'AgentDeleted':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AgentDeleted of this AgentDeleted.  # noqa: E501
        :rtype: AgentDeleted
        """
        return util.deserialize_model(dikt, cls)

    @property
    def msg(self) -> str:
        """Gets the msg of this AgentDeleted.


        :return: The msg of this AgentDeleted.
        :rtype: str
        """
        return self._msg

    @msg.setter
    def msg(self, msg: str):
        """Sets the msg of this AgentDeleted.


        :param msg: The msg of this AgentDeleted.
        :type msg: str
        """

        self._msg = msg

    @property
    def older_than(self) -> str:
        """Gets the older_than of this AgentDeleted.


        :return: The older_than of this AgentDeleted.
        :rtype: str
        """
        return self._older_than

    @older_than.setter
    def older_than(self, older_than: str):
        """Sets the older_than of this AgentDeleted.


        :param older_than: The older_than of this AgentDeleted.
        :type older_than: str
        """

        self._older_than = older_than

    @property
    def affected_agents(self) -> List[str]:
        """Gets the affected_agents of this AgentDeleted.


        :return: The affected_agents of this AgentDeleted.
        :rtype: List[str]
        """
        return self._affected_agents

    @affected_agents.setter
    def affected_agents(self, affected_agents: List[str]):
        """Sets the affected_agents of this AgentDeleted.


        :param affected_agents: The affected_agents of this AgentDeleted.
        :type affected_agents: List[str]
        """

        self._affected_agents = affected_agents

    @property
    def failed_ids(self) -> List[str]:
        """Gets the failed_ids of this AgentDeleted.


        :return: The failed_ids of this AgentDeleted.
        :rtype: List[str]
        """
        return self._failed_ids

    @failed_ids.setter
    def failed_ids(self, failed_ids: List[str]):
        """Sets the failed_ids of this AgentDeleted.


        :param failed_ids: The failed_ids of this AgentDeleted.
        :type failed_ids: List[str]
        """

        self._failed_ids = failed_ids

    @property
    def total_affected_agents(self) -> int:
        """Gets the total_affected_agents of this AgentDeleted.


        :return: The total_affected_agents of this AgentDeleted.
        :rtype: int
        """
        return self._total_affected_agents

    @total_affected_agents.setter
    def total_affected_agents(self, total_affected_agents: int):
        """Sets the total_affected_agents of this AgentDeleted.


        :param total_affected_agents: The total_affected_agents of this AgentDeleted.
        :type total_affected_agents: int
        """

        self._total_affected_agents = total_affected_agents
