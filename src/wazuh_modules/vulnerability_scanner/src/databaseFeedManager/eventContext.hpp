/*
 * Wazuh Vulnerability scanner - Scan Orchestrator
 * Copyright (C) 2015, Wazuh Inc.
 * May 1, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _EVENT_CONTEXT_HPP
#define _EVENT_CONTEXT_HPP

#include "cve5_generated.h"
#include "indexerConnector.hpp"
#include "logging_helper.h"
#include "rocksDBWrapper.hpp"
#include <functional>
#include <memory>
#include <string>
#include <vector>

enum class ResourceType
{
    UNKNOWN,
    CVE,
    TRANSLATION
};

/**
 * @brief EventContext class.
 *
 */
struct EventContext final
{
    const std::vector<char>& message;                                   ///< Message.
    const nlohmann::json& resource;                                     ///< Modified/created resource.
    flatbuffers::DetachedBuffer cve5Buffer;                             ///< CVE data.
    const std::unique_ptr<Utils::RocksDBWrapper>& cvesDatabase;         ///< CVEs database.
    const std::unique_ptr<Utils::RocksDBWrapper>& translationsDatabase; ///< CVEs database.
    ResourceType resourceType;                                          ///< Resource type.

    /**
     * @brief This function returns the database associated to the resource type.
     *
     * @return Utils::RocksDBWrapper* Database.
     */
    Utils::RocksDBWrapper* getDatabaseByResourceType()
    {
        switch (resourceType)
        {
            case ResourceType::CVE: return cvesDatabase.get();
            case ResourceType::TRANSLATION: return translationsDatabase.get();
            default: throw std::runtime_error("Invalid resource type.");
        }
    }
};

#endif // _EVENT_CONTEXT_HPP
