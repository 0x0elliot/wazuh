/*
 * Wazuh Vulnerability Scanner - Unit Tests
 * Copyright (C) 2015, Wazuh Inc.
 * September 21, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#include "storeModel_test.hpp"
#include "databaseFeedManager/eventContext.hpp"
#include "databaseFeedManager/storeModel.hpp"
#include <memory>
#include <string>
#include <vector>

/*
 * @brief Test instantiation of the StoreModel class.
 */
TEST_F(StoreModelTest, TestInstantiationOfTheStoreModelClass)
{
    std::map<std::string, std::unique_ptr<Utils::RocksDBWrapper>> candidatesDatabase;
    // Instantiation of the StoreModel class.
    EXPECT_NO_THROW(std::make_shared<StoreModel>(candidatesDatabase, nullptr, nullptr));
}

/*
 * @brief Test handleRequest of the StoreModel class.
 */
TEST_F(StoreModelTest, TestHandleRequest)
{
    std::vector<char> message;
    nlohmann::json resource;
    auto cvesDatabase = std::make_unique<Utils::RocksDBWrapper>("temp");
    auto eventContext = std::make_shared<EventContext>(
        EventContext {.message = message, .resource = resource, .cvesDatabase = cvesDatabase});

    std::shared_ptr<StoreModel> storeModel;
    std::map<std::string, std::unique_ptr<Utils::RocksDBWrapper>> candidatesDatabase;

    // Instantiation of the StoreModel class.
    EXPECT_NO_THROW(storeModel = std::make_shared<StoreModel>(candidatesDatabase, nullptr, nullptr));

    // HandleRequest
    EXPECT_NO_THROW(storeModel->handleRequest(eventContext));
}
