/*
 * Wazuh SysInfo
 * Copyright (C) 2015, Wazuh Inc.
 * September 25, 2023.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _MOCK_POLICY_MANAGER_HPP
#define _MOCK_POLICY_MANAGER_HPP

#include "json.hpp"
#include "observer.hpp"
#include "gmock/gmock.h"
#include "gtest/gtest.h"

#include <memory>
#include <string>
#include <unordered_set>

class PolicyManagerMock
{
public:
    PolicyManagerMock() = default;
    virtual ~PolicyManagerMock() = default;

    MOCK_METHOD(void, initialize, (const nlohmann::json& configuration), ());
    MOCK_METHOD(void, loadConfiguration, (const nlohmann::json& configuration), ());
    MOCK_METHOD(void, validateConfiguration, (), ());
    MOCK_METHOD(void, validateAndConfigureVulnerabilityDetection, (const nlohmann::json& vdObj), ());
    MOCK_METHOD(void, validateAndConfigureIndexer, (const nlohmann::json& idObj), ());
    MOCK_METHOD(void, addSubscriber, (std::shared_ptr<Observer<nlohmann::json&>> subscriber), ());
    MOCK_METHOD(void, removeSubscriber, (const std::string& observerId), ());
    MOCK_METHOD(nlohmann::json, getUpdaterConfiguration, (), (const));
    MOCK_METHOD(nlohmann::json, getExclusions, (), (const));
    MOCK_METHOD(nlohmann::json, getIndexerConfiguration, (), (const));
    MOCK_METHOD(nlohmann::json, getVulnerabilityDetection, (), (const));
    MOCK_METHOD(bool, isVulnerabilityDetectionEnabled, (), (const));
    MOCK_METHOD(bool, isIndexerEnabled, (), (const));
    MOCK_METHOD(std::string, getFeedUrl, (), (const));
    MOCK_METHOD(long, getFeedUpdateTime, (), (const));
    MOCK_METHOD(std::unordered_set<std::string>, getHostList, (), (const));
    MOCK_METHOD(std::unordered_set<std::string>, getCAList, (), (const));
    MOCK_METHOD(std::string, getUsername, (), (const));
    MOCK_METHOD(std::string, getPassword, (), (const));
    MOCK_METHOD(std::string, getCertificate, (), (const));
    MOCK_METHOD(std::string, getKey, (), (const));
    MOCK_METHOD(std::string, getApikey, (), (const));
};

#endif //_MOCK_POLICY_MANAGER_HPP
