cmake_minimum_required(VERSION 3.12.4)

project(database_feed_manager_tests)

include_directories(${SRC_FOLDER}/wazuh_modules/vulnerability_scanner/src/databaseFeedManager/)
include_directories(${SRC_FOLDER}/wazuh_modules/vulnerability_scanner/src/scanOrchestrator/)
include_directories(${SRC_FOLDER}/shared_modules/)
include_directories(${SRC_FOLDER}/shared_modules/content_manager/src/)
include_directories(${SRC_FOLDER}/wazuh_modules/vulnerability_scanner/tests/mocks/)

file(COPY ${SRC_FOLDER}/wazuh_modules/vulnerability_scanner/schemas/scanVulnerabilityCandidate.fbs DESTINATION
 ${SRC_FOLDER}/build/wazuh_modules/vulnerability_scanner/tests/databaseFeedManager/)

file(GLOB UNIT_TESTS_SRC
    *.cpp
)

file(GLOB DB_FM_SRC
    ${SRC_FOLDER}/wazuh_modules/vulnerability_scanner/src/databaseFeedManager/*[!main]*.cpp
)

file(GLOB CONT_MGR_SRC
    ${SRC_FOLDER}/shared_modules/content_manager/src/*[!main]*.cpp
)

file(GLOB INDEXER_SRC
    ${SRC_FOLDER}/shared_modules/indexer_connector/src/*[!main]*.cpp
)

add_executable(${PROJECT_NAME}
    ${UNIT_TESTS_SRC}
    ${DB_FM_SRC}
    ${CONT_MGR_SRC}
    ${INDEXER_SRC}
)

target_link_libraries(
    ${PROJECT_NAME}
    gtest
    gmock
    router
    urlrequest
    rocksdb
    lzma
    ${SRC_FOLDER}/external/flatbuffers/build/libflatbuffers.a
)

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -fsanitize=address  -fsanitize=undefined")

add_test(NAME ${PROJECT_NAME}
         COMMAND ${PROJECT_NAME})
